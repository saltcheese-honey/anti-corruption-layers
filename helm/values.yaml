global:
  imagePullPolicy: ifNotPresent

api:
  # API subchart values
  replicaCount: 1
  image:
    repository: localhost:5000/anticorruption-api
    tag: "latest"
    pullPolicy: ifNotPresent
  service:
    type: ClusterIP
    port: 3000
  env:
    POSTGRES_HOST: "anticorruption-layer-postgres" 
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "password"
    POSTGRES_DB: "mydb"
  configMap:
    mapping: |-
      mappings:
        - api_endpoint: /users
          query: "SELECT id, username, email, created_at FROM users;"
          columns:
            id: user_id
            username: name
            email: email_address
            created_at: registration_date
        - api_endpoint: /data
          query: "SELECT id, data_value, updated_at FROM data_table;"
          columns:
            id: data_id
            data_value: value
            updated_at: last_update
        - api_endpoint: /orders
          query: "SELECT order_id, customer_id, total, order_date FROM orders;"
          columns:
            order_id: id
            customer_id: customer
            total: amount
            order_date: date

postgres:
  replicaCount: 1
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: ifNotPresent
  service:
    type: ClusterIP
    port: 5432
  credentials:
    user: "postgres"
    password: "password"
    db: "mydb"
  initSql: |
    -- init.sql: Create and seed the initial database schema.
    CREATE TABLE IF NOT EXISTS users (
      id SERIAL PRIMARY KEY,
      username VARCHAR(255) NOT NULL,
      email VARCHAR(255) NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    INSERT INTO users (username, email) VALUES
      ('alice', 'alice@example.com'),
      ('bob', 'bob@example.com'),
      ('charlie', 'charlie@example.com');
    
    CREATE TABLE IF NOT EXISTS data_table (
      id SERIAL PRIMARY KEY,
      data_value TEXT NOT NULL,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    INSERT INTO data_table (data_value) VALUES
      ('Sample Data 1'),
      ('Sample Data 2'),
      ('Sample Data 3');
    
    CREATE TABLE IF NOT EXISTS orders (
      order_id SERIAL PRIMARY KEY,
      customer_id INTEGER NOT NULL,
      total NUMERIC(10,2) NOT NULL,
      order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    INSERT INTO orders (customer_id, total) VALUES
      (1, 100.50),
      (2, 200.00),
      (3, 150.75);
